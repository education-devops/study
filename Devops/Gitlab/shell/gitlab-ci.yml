stages:
  - build
  - test
  - deploy

build:
  stage: build
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE:${CI_COMMIT_REF_SLUG}_nginx.$CI_PIPELINE_ID .
    - docker push $CI_REGISTRY_IMAGE:${CI_COMMIT_REF_SLUG}_nginx.$CI_PIPELINE_ID
  tags:
    - shell

test:
  stage: test
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:${CI_COMMIT_REF_SLUG}_nginx.$CI_PIPELINE_ID
    - docker stop $(docker ps -qa) || true && docker rm $(docker ps -qa) || true
    - docker run -d --rm --name=${CI_COMMIT_REF_NAME} -p 8080:8080 $CI_REGISTRY_IMAGE:${CI_COMMIT_REF_SLUG}_nginx.$CI_PIPELINE_ID npm run ci
  tags:
    - shell

deploy:
  stage: deploy
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:${CI_COMMIT_REF_SLUG}_nginx.$CI_PIPELINE_ID
    - docker stop $(docker ps -qa) || true && docker rm $(docker ps -qa) || true
    - docker run -d --rm --name=${CI_COMMIT_REF_NAME} -p 8080:8080 $CI_REGISTRY_IMAGE:${CI_COMMIT_REF_SLUG}_nginx.$CI_PIPELINE_ID npm run start-server
  tags:
    - shell