kubectl apply -f https://projectcontour.io/quickstart/contour.yaml

kubectl get svc -n projectcontour

создать 3 машины

192.168.122.52  www.example.com         www
192.168.122.144 web2.example.com        web2
192.168.122.242 web3.example.com        web3
192.168.122.243 cat.example.com         tomcat
#---------------------------------------------------------------
kubectl create deployment main --image=adv4000/k8sphp:latest
kubectl create deployment web1 --image=adv4000/k8sphp:version1
kubectl create deployment web2 --image=adv4000/k8sphp:version2
kubectl create deployment webx --image=adv4000/k8sphp:versionx
kubectl create deployment tomcat --image=tomcat:8.5.38
kubectl get pods

kubectl scale deploy main --replicas 2
kubectl scale deploy web1 --replicas 2
kubectl scale deploy web2 --replicas 2
kubectl scale deploy webx --replicas 2
kubectl get deploy

kubectl expose deployment main -- port=80 --type=ClusterIP
kubectl expose deployment main --port=80 --type=ClusterIP
kubectl expose deployment web1 --port=80 --type=ClusterIP
kubectl expose deployment web2 --port=80 --type=ClusterIP
kubectl expose deployment webx --port=80 --type=ClusterIP
kubectl expose deployment tomcat --port=8080 --type=ClusterIP
kubectl get svc -o wide
#---------------------------------------------------------------
mkdir ingress; cd ingress

nano ingress-hosts.yml

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-hosts
  
spec:
  rules:
  - host: www.example.com
    http:
      paths:
      - path: "/page1"
        pathType: Prefix
        backend:
          service:
            name: main
            port: 
              number: 80

  - host: web1.example.com
    http:
      paths:
      - path: "/page1"
        pathType: Prefix
        backend:
          service:
            name: web1
            port: 
              number: 80

  - host: web2.example.com
    http:
      paths:
      - path: "/page1"
        pathType: Prefix
        backend:
          service:
            name: web2
            port: 
              number: 80

  - host: cat.example.com
    http:
      paths:
      - path: "/page1"
        pathType: Prefix
        backend:
          service:
            name: tomcat
            port: 
              number: 8080
#---------------------------------------------------------------
kubectl get ingress
kubectl describe ingress













































