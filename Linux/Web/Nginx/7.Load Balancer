# https://docs.nginx.com/nginx/admin-guide/load-balancer/http-load-balancer/
# https://www.nginx.com/nginx-wiki/build/dirhtml/start/topics/examples/full/
# https://www.nginx.com/nginx-wiki/build/dirhtml/start/topics/examples/reverseproxycachingexample/

sudo apt-get install pip -y
sudo pip install flask

sudo nano /etc/nginx/sites-available/default

upstream            backendserver {
    server          127.0.0.1:1111;
    server          127.0.0.1:2222;
    server          127.0.0.1:3333;
}

server {
    listen          8080;
    root            /var/www/html;

    index	    index.html;

    location    /   {
        proxy_pass  http://backendserver;
        try_files $uri $uri/ =404;
    }
}
------------------------------------------------------------------

nano app.py

#!/usr/bin/env python3
# -*- coding: utf-8 -*-
from flask import Flask
app = Flask(__name__)

@app.route('/')
def hello_world():
  return 'Hello World!'

if __name__=='__main__':
  app.run(debug=True, host='0.0.0.0', port=7777)
------------------------------------------------------------------
pip freeze > requirements.txt
------------------------------------------------------------------

nano Dockerfile

FROM alpine

MAINTAINER user-test

RUN apk update
RUN apk add --no-cache python3 py3-pip

WORKDIR /app

COPY . .
RUN pip install -r requirements.txt --use-pep517

CMD ["python3", "app.py"]

------------------------------------------------------------------
docker build -t myserver .

docker run -d --rm --name test -p 1111:7777 myserver:latest
docker run -d --rm --name test2 -p 2222:7777 myserver:latest
docker run -d --rm --name test3 -p 3333:7777 myserver:latest






































